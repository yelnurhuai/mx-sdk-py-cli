# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: erdpy-build

on:
  pull_request:
    branches: [ main, development ]
  workflow_dispatch:

# At the start of each workflow run, GitHub automatically creates a unique GITHUB_TOKEN secret (we will pass it below to erdpy config).
# The token's permissions are limited to the repository that contains your workflow.
# https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
permissions:
  actions: none
  checks: none
  contents: none
  deployments: none
  id-token: none
  issues: none
  discussions: none
  packages: none
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  build-erdpy:
    name: Build and Test erdpy for ${{ matrix.os }}, python ${{ matrix.python-version }}
    
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-latest, macos-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt
        pip3 install pytest
    - name: Set github_api_token
      run: |
        mkdir ~/elrondsdk
        export PYTHONPATH=.
        python3 -m erdpy.cli config new test
        python3 -m erdpy.cli config set github_api_token ${{ secrets.GITHUB_TOKEN }}
    - name: Setup test dependencies
      run: |
        python3 -m erdpy.cli deps install testwallets
    - name: Run unit tests
      run: |
        export PYTHONPATH=.
        python3 -m unittest discover -s erdpy/tests
        pytest .
    - name: Run CLI tests
      run: |
        cd ./erdpy/tests
        source ./test_cli_contracts.sh && testAll || return 1
        source ./test_cli_wallet.sh && testAll || return 1
        source ./test_cli_dns.sh && testOffline || return 1
